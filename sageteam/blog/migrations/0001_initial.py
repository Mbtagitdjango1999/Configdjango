# Generated by Django 4.2.3 on 2023-07-16 11:06

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import painless.models.validator.picture


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='auto insertion', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='auto mification', verbose_name='Modified')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Title')),
                ('slug', models.SlugField(allow_unicode=True, editable=False, help_text='sluggggg', max_length=110, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='auto insertion', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='auto mification', verbose_name='Modified')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Title')),
                ('slug', models.SlugField(allow_unicode=True, editable=False, help_text='sluggggg', max_length=110, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pic_height_field', models.PositiveSmallIntegerField(blank=True, editable=False, help_text="Size of Picture's height", null=True)),
                ('pic_width_field', models.PositiveSmallIntegerField(blank=True, editable=False, help_text="Size of Picture's width", null=True)),
                ('pic_alternate_text', models.CharField(help_text='Description about picture that is uploaded.', max_length=110)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='auto insertion', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='auto mification', verbose_name='Modified')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Title')),
                ('slug', models.SlugField(allow_unicode=True, editable=False, help_text='sluggggg', max_length=110, unique=True, verbose_name='Slug')),
                ('description', models.TextField(help_text='Long description', verbose_name='Description')),
                ('summary', models.CharField(max_length=255, verbose_name='Summary')),
                ('priority', models.PositiveSmallIntegerField(verbose_name='Priority')),
                ('picture', models.ImageField(height_field='pic_height_field', max_length=110, upload_to='blog/post', validators=[painless.models.validator.picture.DimensionValidator(800, 600), django.core.validators.FileExtensionValidator(allowed_extensions=['JPG', 'JPEG', 'jpg', 'jpeg'])], verbose_name='Picture', width_field='pic_width_field')),
                ('category', models.ForeignKey(blank=True, help_text='access to all post by category', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='posts', to='blog.category', verbose_name='Category')),
                ('tags', models.ManyToManyField(blank=True, help_text='access to all posts by tags', related_name='posts', to='blog.tag', verbose_name='Tags')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='auto insertion', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='auto mification', verbose_name='Modified')),
                ('text', models.TextField(help_text='Text content of the comment', max_length=500, verbose_name='Text')),
                ('post', models.ForeignKey(help_text='Access to all comments from a post', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.post')),
                ('reply', models.ForeignKey(blank=True, help_text='Access to all reply frpm a comment', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blog.comment', verbose_name='Reply')),
                ('user', models.ForeignKey(help_text='the user reach all comments', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
            },
        ),
    ]
